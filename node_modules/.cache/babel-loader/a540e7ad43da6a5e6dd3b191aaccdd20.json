{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prani\\\\Desktop\\\\DSproject\\\\front-end\\\\src\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Register = props => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const navigateToLogin = () => {\n    window.location.href = '/login';\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (username.trim() === '' || password.trim() === '') {\n      setErrorMessage('Username and password cannot be empty.');\n      return;\n    }\n\n    const minion1 = 'https://cabinet.minion.chat.junglesucks.com'; // If the first URL fails, use this as backup\n\n    const minion2 = 'https://lecture.minion.chat.junglesucks.com';\n    const data = {\n      'username': username,\n      'password': password,\n      'clientUrlIdentifier': 'a'\n    };\n    fetch(`${minion1}/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => {\n      if (response.ok) {\n        navigateToLogin();\n      } else if (response.status === 409) {\n        setErrorMessage('Username already taken, please choose a different one.');\n      } else {\n        // If the first URL fails, try the backup\n        return fetch(`${minion2}/register`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        }).then(response => {\n          if (response.ok) {\n            navigateToLogin();\n          } else {\n            throw new Error('Failed to register.');\n          }\n        });\n      }\n    }).catch(error => console.error(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        type: \"text\",\n        placeholder: \"username\",\n        id: \"username\",\n        name: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: \"password\",\n        placeholder: \"********\",\n        id: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"link-btn\",\n      onClick: navigateToLogin,\n      children: \"Already have an account? Login here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"q37Po17WbhPwv8Y2XJ4Bs6FUZXE=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Register","props","username","setUsername","password","setPassword","errorMessage","setErrorMessage","navigateToLogin","window","location","href","handleSubmit","e","preventDefault","trim","minion1","minion2","data","fetch","method","headers","body","JSON","stringify","then","response","ok","status","Error","catch","error","console","target","value"],"sources":["C:/Users/prani/Desktop/DSproject/front-end/src/Register.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const Register = (props) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const navigateToLogin = () => {\r\n    window.location.href = '/login';\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (username.trim() === '' || password.trim() === '') {\r\n      setErrorMessage('Username and password cannot be empty.');\r\n      return;\r\n    }\r\n    \r\n    const minion1 = 'https://cabinet.minion.chat.junglesucks.com';\r\n    // If the first URL fails, use this as backup\r\n    const minion2 = 'https://lecture.minion.chat.junglesucks.com';\r\n    \r\n    const data = {\r\n      'username': username,\r\n      'password': password,\r\n      'clientUrlIdentifier': 'a'\r\n    };\r\n    \r\n    fetch(`${minion1}/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n    .then(response => {\r\n      if (response.ok) {\r\n        navigateToLogin();\r\n      } else if (response.status === 409) {\r\n        setErrorMessage('Username already taken, please choose a different one.');\r\n      } else {\r\n        // If the first URL fails, try the backup\r\n        return fetch(`${minion2}/register`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(data)\r\n        })\r\n        .then(response => {\r\n          if (response.ok) {\r\n            navigateToLogin();\r\n          } else {\r\n            throw new Error('Failed to register.');\r\n          }\r\n        });\r\n      }\r\n    })\r\n    .catch(error => console.error(error));\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"auth-form-container\">\r\n      <h2>Register</h2>\r\n      <form className=\"register-form\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input value={username} onChange={(e) => setUsername(e.target.value)} type=\"text\" placeholder=\"username\" id=\"username\" name=\"username\" />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\" placeholder=\"********\" id=\"password\" name=\"password\" />\r\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n      <button className=\"link-btn\" onClick={navigateToLogin}>Already have an account? Login here.</button>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}