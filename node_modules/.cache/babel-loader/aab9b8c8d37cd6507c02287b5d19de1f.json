{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prani\\\\Desktop\\\\DSproject\\\\front-end\\\\src\\\\components\\\\ConversationComponents.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport React, { useState, useEffect } from 'react';\nimport { SearchContainer, SearchInput } from \"./ContactListComponents\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  flex: 2;\n  background: #f6f7f8;\n`;\n_c = Container;\nconst ProfileHeader = styled.div`\n  display: flex;\n  color: black;\n  flex-direction: row;\n  background: #ededed;\n  padding: 15px;\n  align-items: center;\n  gap: 10px;\n`;\n_c2 = ProfileHeader;\nconst ChatBox = styled.div`\n  display: flex;\n  background: #f0f0f0;\n  padding: 10px;\n  align-items: center;\n  bottom: 0;\n`;\n_c3 = ChatBox;\nconst MessageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background: #e5ddd6;\n  color: black;\n`;\n_c4 = MessageContainer;\nconst Button = styled.button`\n  background: #4caf50;\n  border: none;\n  color: white;\n  padding: 12px 16px;\n  text-align: center;\n  text-decoration: none;\n  font-size: 12px;\n  border-radius: 12px;\n  margin-left: 8px;\n  cursor: pointer;\n`;\n_c5 = Button;\n\nconst ConversationComponent = _ref => {\n  _s();\n\n  let {\n    sharedState\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  useEffect(() => {\n    getMessages();\n  }, []);\n\n  const getMessages = async () => {\n    try {\n      const response = await fetch('https://cabinet.minion.chat.junglesucks.com/getMessagesBetweenMeAndUser');\n      const data = await response.json();\n      setMessages(data.Content);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const postMessage = async () => {\n    try {\n      const response = await fetch('https://cabinet.minion.chat.junglesucks.com/send', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          SenderName: \"current_user\",\n          ReceiverName: sharedState,\n          SenderMinionUrlIdentifier: \"\",\n          ReceiverMinionUrlIdentifier: \"\",\n          Content: inputValue\n        })\n      });\n      const data = await response.json();\n      setMessages(prevMessages => [...prevMessages, {\n        text: inputValue\n      }]);\n      setInputValue('');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  const handleButtonClick = () => {\n    postMessage();\n  };\n\n  const Message = _ref2 => {\n    let {\n      text\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(ProfileHeader, {\n      children: sharedState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageContainer, {\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)), inputValue && /*#__PURE__*/_jsxDEV(Message, {\n        text: inputValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n      children: /*#__PURE__*/_jsxDEV(SearchContainer, {\n        children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n          placeholder: \"Type a message\",\n          value: inputValue,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleButtonClick,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConversationComponent, \"GG/YeSFNrWOWKG591Wbb47E4YjM=\");\n\n_c6 = ConversationComponent;\nexport default ConversationComponent;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ProfileHeader\");\n$RefreshReg$(_c3, \"ChatBox\");\n$RefreshReg$(_c4, \"MessageContainer\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"ConversationComponent\");","map":{"version":3,"names":["styled","React","useState","useEffect","SearchContainer","SearchInput","Container","div","ProfileHeader","ChatBox","MessageContainer","Button","button","ConversationComponent","sharedState","messages","setMessages","inputValue","setInputValue","getMessages","response","fetch","data","json","Content","error","console","postMessage","method","headers","body","JSON","stringify","SenderName","ReceiverName","SenderMinionUrlIdentifier","ReceiverMinionUrlIdentifier","prevMessages","text","handleInputChange","event","target","value","handleButtonClick","Message","map","message","index"],"sources":["C:/Users/prani/Desktop/DSproject/front-end/src/components/ConversationComponents.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport { SearchContainer, SearchInput } from \"./ContactListComponents\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  flex: 2;\r\n  background: #f6f7f8;\r\n`;\r\n\r\nconst ProfileHeader = styled.div`\r\n  display: flex;\r\n  color: black;\r\n  flex-direction: row;\r\n  background: #ededed;\r\n  padding: 15px;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nconst ChatBox = styled.div`\r\n  display: flex;\r\n  background: #f0f0f0;\r\n  padding: 10px;\r\n  align-items: center;\r\n  bottom: 0;\r\n`;\r\n\r\nconst MessageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  background: #e5ddd6;\r\n  color: black;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: #4caf50;\r\n  border: none;\r\n  color: white;\r\n  padding: 12px 16px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  font-size: 12px;\r\n  border-radius: 12px;\r\n  margin-left: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ConversationComponent = ({ sharedState }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  useEffect(() => {\r\n    getMessages();\r\n  }, []);\r\n\r\n  const getMessages = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        'https://cabinet.minion.chat.junglesucks.com/getMessagesBetweenMeAndUser'\r\n      );\r\n      const data = await response.json();\r\n\r\n      setMessages(data.Content);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const postMessage = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        'https://cabinet.minion.chat.junglesucks.com/send',\r\n        {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ \r\n            SenderName: \"current_user\", \r\n            ReceiverName: sharedState, \r\n            SenderMinionUrlIdentifier:  \"\", \r\n            ReceiverMinionUrlIdentifier: \"\",\r\n            Content: inputValue }),\r\n        }\r\n      );\r\n\r\n      const data = await response.json();\r\n      setMessages((prevMessages) => [...prevMessages, { text: inputValue }]);\r\n      setInputValue('');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const handleButtonClick = () => {\r\n    postMessage();\r\n  };\r\n\r\n  const Message = ({ text }) => {\r\n    return <div>{text}</div>;\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <ProfileHeader>{sharedState}</ProfileHeader>\r\n      <MessageContainer>\r\n        {messages.map((message, index) => (\r\n          <Message key={index}>{message.text}</Message>\r\n        ))}\r\n        {inputValue && <Message text={inputValue} />}\r\n      </MessageContainer>\r\n      <ChatBox>\r\n        <SearchContainer>\r\n          <SearchInput\r\n            placeholder=\"Type a message\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n          />\r\n          <Button onClick={handleButtonClick}>Send</Button>\r\n        </SearchContainer>\r\n      </ChatBox>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ConversationComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}