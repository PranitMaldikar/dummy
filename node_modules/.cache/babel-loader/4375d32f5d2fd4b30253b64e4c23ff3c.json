{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prani\\\\Desktop\\\\DSproject\\\\front-end\\\\src\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = props => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [apiKey, setApiKey] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleFormSwitch = formType => {\n    // console.log(props);\n    props.onFormSwitch(formType);\n    window.history.replaceState(null, null, `/${formType}`); // update URL\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (username.trim() === '' || password.trim() === '') {\n      setErrorMessage('Username and password cannot be empty.');\n      return;\n    }\n\n    try {\n      const response = await fetch('https://cabinet.minion.chat.junglesucks.com/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      }); // console.log(response);\n\n      if (response.ok) {\n        const data = await response.json(); // console.log(data)\n\n        setApiKey(data.ApiKey);\n        props.onLoginSuccess(username);\n        console.log(`API key received: ${data.ApiKey}`);\n        handleFormSwitch('chat');\n      } else if (response.status === 409) {\n        setErrorMessage('Invalid username or password.');\n      } else {\n        console.error('Failed to login');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        type: \"text\",\n        placeholder: \"existingbeepboop\",\n        id: \"username\",\n        name: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: \"password\",\n        placeholder: \"********\",\n        id: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"link-btn\",\n      onClick: () => handleFormSwitch('register'),\n      children: \"Don't have an account? Register here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"Z5Pcez9HmEbyOWtfrJvuFUXKLcE=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Login","props","username","setUsername","password","setPassword","apiKey","setApiKey","errorMessage","setErrorMessage","handleFormSwitch","formType","onFormSwitch","window","history","replaceState","handleSubmit","e","preventDefault","trim","response","fetch","method","headers","body","JSON","stringify","ok","data","json","ApiKey","onLoginSuccess","console","log","status","error","target","value"],"sources":["C:/Users/prani/Desktop/DSproject/front-end/src/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\n\r\nexport const Login = (props) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [apiKey, setApiKey] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleFormSwitch = (formType) => {\r\n    // console.log(props);\r\n    props.onFormSwitch(formType);\r\n    window.history.replaceState(null, null, `/${formType}`); // update URL\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (username.trim() === '' || password.trim() === '') {\r\n    setErrorMessage('Username and password cannot be empty.');\r\n    return;\r\n  }\r\n    try {\r\n      const response = await fetch('https://cabinet.minion.chat.junglesucks.com/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ username, password })\r\n      });\r\n      // console.log(response);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        // console.log(data)\r\n        setApiKey(data.ApiKey);\r\n        props.onLoginSuccess(username);\r\n        console.log(`API key received: ${data.ApiKey}`);\r\n        handleFormSwitch('chat');\r\n      } else if (response.status === 409) {\r\n        setErrorMessage('Invalid username or password.');\r\n      } else {\r\n        console.error('Failed to login');\r\n      }\r\n    } \r\n    catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"auth-form-container\">\r\n      <h2>Login</h2>\r\n      <form className=\"login-form\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input value={username} onChange={(e) => setUsername(e.target.value)} type=\"text\" placeholder=\"existingbeepboop\" id=\"username\" name=\"username\" />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\" placeholder=\"********\" id=\"password\" name=\"password\" />\r\n        {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n        <button type=\"submit\" >Log In</button>\r\n      </form>\r\n      <button className=\"link-btn\" onClick={() => handleFormSwitch('register')}>\r\n        Don't have an account? Register here.\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}